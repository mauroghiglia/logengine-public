# This is the configuration file for the log generator (logengine.py).
# It is used to generate logs for the log engine.
# It should be kept in the same directory as the logengine.py file, with the same user and execute permissions.

# Check if we are in test mode or production mode.
test_mode: false  # Set to true for test mode, false for production mode.
# In test mode, the log engine will only generate a single log line as terminal output, but will still run and check for errors.

# Log Format (if unknown it defaults to 'json')
log_format: json  # or "plain", "csv", "xml"

# Folders
log_dir: "/var/log/logengine-public/logengine-public-logs"
logging_output_file: "/var/log/logengine-public/logengine-public-logs/logging_output.log"
log_control_file: "/var/log/logengine-public/logengine-public-logs/logging_active.flag"

# Reset day of the week and time.
stop_day_of_week: 5  # 5 is Saturday (0 is Sunday)
stop_hour: 0  # 0 is midnight (12 AM)


# Here you can choose which logs you want to generate. The default is all logs.
# You can set the value to true or false for each log type.
# If you set a log type to false, it will not be generated.

log_types:
  prices: true
  trades: true
  series: true

# Range of time intervals, in seconds, between the log generation events
interval_range: [1, 3]

# Proportions between the different log types.
log_levels:
  INFO: 50
  WARNING": 20
  ERROR: 10
  DEBUG: 20

# Identifiers for the different log types (category).
categories:
  prices: "CTE.PRI.CCP.TO.CCG.Q"
  trades: "CTE.TRA.CCP.TO.CCG.Q"
  series: "CTE.SER.CCP.TO.CCG.Q"

# The log messages for each log type. You can add or remove messages as needed.
# The log messages should be in the format "log message".
# Pay attention to the message "Unknown keyword $id.." - It's between single quotes since it contains a special character '$'.

messages:
  prices:
    - "Getting previousPrice for ID: *"
    - "Using previousPrice: *"
    - "Using latestPrice: *"
    - "Historical price found: *"
    - "ID * added to history"
    - "Latest price changed for ID *: * -> *"
    - "Price difference is *"
    - "PRICE HAS CHANGED TOO MUCH for ID *: *"
    - "Old price: *, New price: *"
    - "Price saved for ID *: *"
    - "Sending price change notification for ID *"
  trades:
    - "Start Process Message"
    - "End Process Message"
    - 'Unknown keyword $id - you should define your own Meta Schema.'
    - "Unknown keyword version - you should define your own Meta Schema."
    - "Unknown keyword examples - you should define your own Meta Schema."
    - "Could not refresh JMS Connection for destination 'CTE2.TRADES.CCPRO.TO.CCG.Q' - retrying using FixedBackOff{interval=5000, currentAttempts=0, maxAttempts=unlimited}. Cause: JMSWMQ0018: Failed to connect to queue manager 'GTWCTE2' with connection mode 'Client' and host name '10.10.50.50(1438)'.; nested exception is com.ibm.mq.MQException: JMSCMQ0001: IBM MQ call failed with compcode '2' ('MQCC_FAILED') reason '2538' ('MQRC_HOST_NOT_AVAILABLE')."
    - "Setup of JMS message listener invoker failed for destination 'CTE2.TRADES.CCPRO.TO.CCG.Q' - trying to recover. Cause: JMSWMQ2002: Failed to get a message from destination 'CTE2.TRADES.CCPRO.TO.CCG.Q'.; nested exception is com.ibm.mq.MQException: JMSCMQ0001: IBM MQ call failed with compcode '2' ('MQCC_FAILED') reason '2009' ('MQRC_CONNECTION_BROKEN')."
  series:
    - "Start Process Message for ID *"
    - "End Process Message for ID *"

